<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace는 필수 속성이다. : dao 식별하기 위한 이름 -->
<mapper namespace="com.wad.udo.member.dao.MemberSessionDao">
	
	<!-- select 결과 메핑을 위한 resultMap 설정 -->
	<resultMap id="resultMemberInfo"
		type="com.wad.udo.member.domain.MemberInfo">
		<id property="idx" column="idx" />
		<result property="uId" column="uid" />
		<result property="uPW" column="upw" />
		<result property="uName" column="uname" />
		<result property="uPhone" column="uphone" />
		<result property="uPhoto" column="uphoto" />
		<result property="verify" column="verify" />
		<result property="code" column="code" />
	</resultMap>
	
	<!-- 회원로그인  -->
	<select id="selectMemberById" resultMap="resultMemberInfo">
		
		select * from member where uid = #{uId}
	
	</select>
	
	<!-- 회원가입  -->
	<insert id="insertMember" parameterType="com.wad.udo.member.domain.MemberInfo">
	
		insert into member (uid, upw, uname, uphone, uphoto, code) values (#{uId}, #{uPW}, #{uName}, #{uPhone}, #{uPhoto}, #{code})
	
	</insert>
	
	<!-- 핸드폰 번호를 통한  회원정보 select: 회원가입 시 핸드폰 번호 중복 검사-->
	<select id="selectMemberByPhone" resultMap="resultMemberInfo">
	
		select * from member where uphone = #{uPhone}
		
	</select>
	
	<!-- 이메일 인증 코드 업데이트  -->
	<update id="updateVerify">
	
		update member set verify='Y' where uid = #{param1} and code = #{param2}
		
	</update>
	
	<!-- 이름, 아이디를 통한 회원정보 select: 비밀번호 재발급 후 임시비밀번호로 update시 필요 -->
	<update id="updateTempPassword">
	
		update member set upw = #{param1} where uid = #{param2}
		
	</update>
	
	<!-- id를 통한 회원탈퇴: 회원일 경우 session에 저장된 loginInfo 객체에서 uId를 받아온다 -->
	<delete id="deleteMemberById">
	
		delete from member where uid = #{uId}
		
	</delete>
	
	<!-- 회원정보 수정 -->
	<update id="updateMember"
		parameterType="com.wad.udo.member.domain.MemberInfo">

		update member set upw=#{uPW}, uname=#{uName}, uphoto=#{uPhoto} where uid=#{uId}

	</update>
	
</mapper>